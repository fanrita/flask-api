---
apiVersion: v1
kind: Namespace
metadata:
  name: flask-app
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-volume
  namespace: flask-app
  labels:
    name: mysql
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: flask-app
  labels:
    name: mysql
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: flask-app
data:
  mysql-password: ZGV2b3Bz
  mysql-root-password: cm9vdA==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: flask-app
data:
  mysql-db-name: student
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: flask-app
spec:
  selector:
    matchLabels:
      name: mysql
  serviceName: mysql
  minReadySeconds: 10
  template:
    metadata:
      labels:
        name: mysql
      namespace: flask-app
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: mypd
          persistentVolumeClaim:
            claimName: mysql-pv-claim
      containers:
        - name: mysql
          image: mysql:5.7
          volumeMounts:
          - mountPath: "/var/lib/mysql"
            name: mypd
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 200m
              memory: 512Mi
          env:
            - name: "MYSQL_USER"
              value: devops
            - name: "MYSQL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
            - name: "MYSQL_DATABASE"
              valueFrom:
                configMapKeyRef:
                  name: mysql-config
                  key: mysql-db-name
            - name: "MYSQL_ROOT_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-root-password
          ports:
            - containerPort: 3306
              name: mysql-container
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: flask-app
spec:
  selector:
    name: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: mysql-container
      name: mysql
